plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = project.mod_group
archivesBaseName = project.mod_id
version = project.mod_version

println("Building on Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}) Arch: ${System.getProperty('os.arch')}")
println("Minecraft ${project.minecraft_version}, Fabric ${project.fabric_version}")

repositories {
    maven {
        url "https://maven.shedaniel.me/"
        content {
            // ClothConfig
            includeModule("me.shedaniel.cloth", "cloth-config-fabric")
            includeModule("me.shedaniel.cloth", "basic-math")
        }
    }
    maven {
        url "https://maven.bai.lol"
        content {
            // WTHIT
            includeModule("lol.bai", "badpackets")
            includeModule("mcp.mobius.waila", "wthit")
            includeModule("mcp.mobius.waila", "wthit-api")
        }
    }
    maven {
        url "https://server.bbkr.space/artifactory/libs-release"
        content {
            // LibGUI
            includeModule("io.github.cottonmc", "LibGui")
            includeModule("io.github.cottonmc", "Jankson-Fabric")
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    compileOnly 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.17.0'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly 'com.google.code.gson:gson:2.8.9'

    // Fabric
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // LibGui
    modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}+${project.minecraft_version}")

    // Cloth Config
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // WTHIT (WAILA)
    modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}"
    modRuntimeOnly "mcp.mobius.waila:wthit:fabric-${project.wthit_version}"
    modRuntimeOnly "lol.bai:badpackets:fabric-${project.badpackets_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "mod_id": project.mod_id,
                "mod_version": project.mod_version,
                "mod_name": project.mod_name,
                "mod_description": project.mod_description
    }
}

remapJar {
    archiveClassifier = "fabric${project.minecraft_version}"

    from rootProject.file("LICENSE.md")
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
